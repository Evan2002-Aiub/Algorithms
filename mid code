#include<bits/stdc++.h>
#include<iostream>
#include <chrono>
using namespace std;
void swap(int* a, int* b)
{
 int t = *a;
 *a = *b;
 *b = t;
}
void insertionSort(int arr[], int n)
{
 int i, key, j;
 for (i = 1; i < n; i++)
 {
 key = arr[i];
 j = i - 1;
 while (j >= 0 && arr[j] > key)
 {
 arr[j + 1] = arr[j];
 j = j - 1;
 }
 arr[j + 1] = key;
 }
}
int part (int arr[], int low, int high)
{
 int pivot = arr[high];
 int i = (low - 1);
 for (int j = low; j <= high- 1; j++)
 {

 if (arr[j] <= pivot)
 {
 i++;
 swap(&arr[i], &arr[j]);
 }
 }
 swap(&arr[i + 1], &arr[high]);
return (i + 1);
}

void quickSort(int arr[], int low, int high)
{
 if (low < high)
 {
 int pi = part(arr, low, high);
 quickSort(arr, low, pi - 1);
 quickSort(arr, pi + 1, high);
 }
}
void printArray(int arr[], int size)
{
 int i;
 for (i=0; i < size; i++)
 cout<<arr[i]<<" ";
 cout<<endl;
}
int main()
{
 int n = 100;
	int arr[n];

    freopen("in.txt", "r", stdin);
     for(int i=0;i<n;i++)
     {

         cin>>arr[i];

     }
	int x = 11796;
 /*int n,x,i;
 cout<<"Enter size of array: ";
 cin>>n;
 int arr[n];
 cout<<"Enter Array Elements: ";
 for(i=0;i<n;i++)
 {
 cin>>arr[i];
 }*/
 //quickSort(arr, 0, n-1);
 //cout<<"Sorted array: "<<endl;
 //printArray(arr, n);
 auto start1 = chrono::high_resolution_clock::now();
    ios_base::sync_with_stdio(false);

    /*  ..........Change your algorithm...............*/
    quickSort(arr, 0, n-1);
    /* .......................................  */


    /*.....................Time taken by 1st Algorithm........................*/
    auto end1 = chrono::high_resolution_clock::now();
    double time_taken1 =chrono::duration_cast<chrono::nanoseconds>(end1 - start1).count();
        time_taken1 *= 1e-9;
    cout << "Time taken by program is : " << fixed
         << time_taken1 << setprecision(9);
    cout << " sec" << endl;

    /*.....................End of Time taken by 1st Algorithm........................*/

    auto start2 = chrono::high_resolution_clock::now();
    ios_base::sync_with_stdio(false);

    /*  ..........Change your algorithm...............*/
    insertionSort(arr,  n);
    /* .......................................  */


    /*.....................Time taken by 2nd Algorithm........................*/
    auto end2 = chrono::high_resolution_clock::now();
    double time_taken2 =chrono::duration_cast<chrono::nanoseconds>(end2 - start2).count();
        time_taken2 *= 1e-9;
    cout << "Time taken by program is : " << fixed
         << time_taken2 << setprecision(9);
    cout << " sec" << endl;

    /*.....................End of Time taken by 2nd Algorithm........................*/


return 0;
}
